@use 'sass:map';
@use './functions' as func;
@use './variables' as *;

html,
html:focus-within {
  scroll-behavior: smooth;
  *[id] {
    scroll-margin-top: 6rem;
  }
}

// ----------
// LAYOUT
// ----------
main {
  padding-block: map.get($scale, 900);
}

div.container {
  width: 90%;
  max-width: 45rem;
  margin-inline: auto;
}

// ----------
// TYPOGRAPHY
// ----------
h1, h2, h3, h4, h5, h6 {
  font-family: map.get($fonts, serif);
}

h1 {
  max-width: 20ch;
  font-size: $font-size--title;
  font-weight: 900;
  line-height: 1.2;
  margin-top: 6rem;

  & + * {
    margin-top: map.get($scale, 900);
  }

  @media screen and (max-width: 575px) {
    font-size: map.get($scale, 800);
    line-height: 1.4;
  }
}

h2 {
  & + * {
    margin-top: map.get($scale, 700);
  }
}

p {
  max-width: 70ch;
  font-family: map.get($fonts, sans-serif);
  font-size: $font-size--base;
  line-height: 2;
  & + * {
    margin-top: map.get($scale, 600);
  }

  @media screen and (max-width: 575px) {
    font-size: $font-size--lead;
  }

  &.lead {
    font-size: $font-size--lead;
  }

  &.tagline {
    font-family: map.get($fonts, cursive);
    font-size: $font-size--title;
    line-height: 1;
  }
}

a {
  font-family: map.get($fonts, serif);
}

// ----------
// IMAGES
// ----------
img#global-background {
  z-index: -3;
  position: fixed;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
  width: 90%;
  max-width: 45rem;
  opacity: .06;
}

// ----------
// ELEMENTS
// ----------
hr {
  $gap: func.extend-scale(1100);
  $clr: map.get($colours, grey);
  position: relative;
  border: none;
  border-bottom: 1px solid $clr;
  overflow: visible;

  * + & { margin-top: #{$gap}rem; }
  + * { margin-top: #{$gap}rem; }

  &::after {
    content: "/ / /";
    position: absolute;
    top: 0;
    left: 50%;
    width: 2rem;
    height: 2rem;
    transform: translate(-50%, -50%);
    padding-inline: map.get($scale, 200);
    text-align: center;
    line-height: 2rem;
    font-size: $font-size--lead;
    font-weight: 900;
    background-color: map.get($colours, light);
    color: $clr;
  }
}

.blur {
  backdrop-filter: blur(.125rem);
}
